name: Build OpenSSL for iOS

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-openssl-ios:
    name: Build OpenSSL for iOS
    runs-on: macos-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up caching for dependencies and build output
      uses: actions/cache@v3
      with:
        path: |
          /usr/local/Cellar/automake
          /usr/local/Cellar/libtool
          build-cache
        key: ${{ runner.os }}-openssl-deps-${{ hashFiles('**/openssl/**') }}
        restore-keys: |
          ${{ runner.os }}-openssl-deps-

    - name: Install dependencies if not cached
      run: |
        brew list automake || brew install automake
        brew list libtool || brew install libtool

    - name: Set the correct Xcode version
      run: |
        sudo xcode-select --switch /Applications/Xcode_15.4.app

    - name: Install Xcode Command Line Tools
      run: |
        xcode-select --install || echo "Xcode Command Line Tools are already installed"

    - name: Accept Xcode License
      run: sudo xcodebuild -license accept

    - name: Check Available SDKs
      run: |
        xcode-select -p
        xcrun --sdk iphoneos --show-sdk-path || echo "SDK iphoneos not found"
        xcrun --sdk iphonesimulator --show-sdk-path || echo "SDK iphonesimulator not found"

    - name: Configure and Build OpenSSL for iOS
      working-directory: ${{ github.workspace }}/openssl
      env:
        SDK_PATH: "/Applications/Xcode_15.4.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS17.5.sdk"
        MIN_IOS_VERSION: 12.0
        ARCHS: "arm64 arm64e x86_64"
        BUILD_DIR: build-cache/build-ios
      run: |
        set -e

        # Set paths for the build
        OPENSSL_DIR=${PWD}
        OUTPUT_DIR=${PWD}/${BUILD_DIR}
        mkdir -p "${OUTPUT_DIR}"

        for ARCH in $ARCHS; do
          if [[ "$ARCH" == "x86_64" ]]; then
            PLATFORM="iPhoneSimulator"
          else
            PLATFORM="iPhoneOS"
          fi

          # Simplified SDK paths
          export CROSS_TOP="${SDK_PATH%/SDKs/*}"
          export CROSS_SDK="${PLATFORM}17.5.sdk"
          export BUILD_TOOLS="${CROSS_TOP}/usr/bin"

          echo "Building for architecture: $ARCH"
          echo "Using SDK_PATH: $SDK_PATH"
          echo "Using CROSS_TOP: $CROSS_TOP"
          echo "Using CROSS_SDK: $CROSS_SDK"

          # Configure OpenSSL for the target architecture
          ./Configure iphoneos-cross no-shared no-dso no-hw no-engine \
            --prefix="${OUTPUT_DIR}/${ARCH}" \
            --openssldir="${OUTPUT_DIR}/${ARCH}/ssl"

          # Build OpenSSL
          make clean
          make -j$(sysctl -n hw.logicalcpu)
          make install_sw
        done

    - name: Archive build output
      working-directory: ${{ github.workspace }}
      run: |
        tar -czf openssl-ios-binaries.tar.gz -C build-cache/build-ios .
        mkdir -p artifacts
        mv openssl-ios-binaries.tar.gz artifacts/

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: openssl-ios-binaries
        path: artifacts/openssl-ios-binaries.tar.gz
